if $VIM_PLUGINS != 'NO'
  runtime! autoload/pathogen.vim
  if exists('g:loaded_pathogen')
    execute pathogen#infect('~/.vimbundles/{}', '~/.vim/bundle/{}')
  endif
endif

set nocompatible              " be iMproved

set background=dark
colorscheme Tomorrow-Night

set laststatus=2
let g:airline_powerline_fonts=1

syntax on
filetype plugin indent on
set wildmenu
set wildmode=list:longest,full
set splitright
set splitbelow
set hidden
set whichwrap+=<,>,h,l,[,]
set nobackup
set nowritebackup
set noswapfile
set number
set numberwidth=5
set ruler
set splitbelow
set splitright
set expandtab
set tabstop=2
set shiftwidth=2

set expandtab
set smarttab

" Use old regex engine in newer versions of Vim.
" The new engine casues severe slowdown, especially in Ruby files.
if version >= 703
  set re=1
end

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

"set guifont=Monaco:h16
"set guioptions-=T guioptions-=e guioptions-=L guioptions-=r

augroup vimrc
  autocmd!
  autocmd GuiEnter * set columns=120 lines=70 number
augroup END

set antialias
autocmd QuickFixCmdPost *grep* cwindow

let g:rails_projections = {
      \ "app/emitters/*_emitter.rb": {"command": "emitter"},
      \ "app/forms/*_form.rb": {"command": "form"},
      \ "app/forms/*_notifier.rb": {"command": "notifier"},
      \ "app/forms/*_renderer.rb": {"command": "renderer"},
      \ "app/forms/*_strategy.rb": {"command": "strategy"},
      \ "app/forms/*_validator.rb": {"command": "validator"},
      \ "features/*_feature.rb": {"command": "feature"}}

if has('persistent_undo')
  set undofile
  set undodir^=~/.vim/tmp//,~/Library/Vim/undo
endif

python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup

if filereadable(expand('~/.vimrc.local'))
  source ~/.vimrc.local
endif
